import telebot
from telebot import types
import time
import requests
import random
import json
import os


def load_user_stats():
    if os.path.exists('user_stats.json'):
        with open('user_stats.json', 'r', encoding='utf-8') as f:
            return json.load(f)
    return {}


def save_user_stats():
    with open('user_stats.json', 'w', encoding='utf-8') as f:
        json.dump(user_stats, f, ensure_ascii=False, indent=2)

bot = telebot.TeleBot('')

quiz_questions = [
    {
        'question': '‚ùì *–ö–∞–∫–æ–≤–∞ –æ—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–∏—á–∏–Ω–∞ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –ø–æ—Ç–µ–ø–ª–µ–Ω–∏—è?*',
        'options': [
            '–ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∫–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ü–∏–∫–ª—ã',
            '–î–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å —á–µ–ª–æ–≤–µ–∫–∞',
            '–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ–ª–Ω–µ—á–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏',
            '–í—É–ª–∫–∞–Ω–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å'
        ],
        'explanation': '‚úÖ *–ü—Ä–∞–≤–∏–ª—å–Ω–æ!* –û—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–∏—á–∏–Ω–∞ - –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å —á–µ–ª–æ–≤–µ–∫–∞, –æ—Å–æ–±–µ–Ω–Ω–æ –≤—ã–±—Ä–æ—Å—ã –ø–∞—Ä–Ω–∏–∫–æ–≤—ã—Ö –≥–∞–∑–æ–≤ –æ—Ç —Å–∂–∏–≥–∞–Ω–∏—è –∏—Å–∫–æ–ø–∞–µ–º–æ–≥–æ —Ç–æ–ø–ª–∏–≤–∞.'
    },
    {
        'question': 'üå°Ô∏è *–ù–∞ —Å–∫–æ–ª—å–∫–æ –≥—Ä–∞–¥—É—Å–æ–≤ –ø–æ–≤—ã—Å–∏–ª–∞—Å—å —Å—Ä–µ–¥–Ω—è—è –≥–ª–æ–±–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Å –∫–æ–Ω—Ü–∞ 19 –≤–µ–∫–∞?*',
        'options': [
            '0.5¬∞C',
            '1.1¬∞C', 
            '2.0¬∞C',
            '3.5¬∞C'
        ],
        'explanation': '‚úÖ *–í–µ—Ä–Ω–æ!* –°—Ä–µ–¥–Ω—è—è –≥–ª–æ–±–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø–æ–≤—ã—Å–∏–ª–∞—Å—å –Ω–∞ 1.1¬∞C —Å –¥–æ–∏–Ω–¥—É—Å—Ç—Ä–∏–∞–ª—å–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è.'
    },
    {
        'question': 'üè≠ *–ö–∞–∫–æ–π —Å–µ–∫—Ç–æ—Ä —è–≤–ª—è–µ—Ç—Å—è –∫—Ä—É–ø–Ω–µ–π—à–∏–º –∏—Å—Ç–æ—á–Ω–∏–∫–æ–º –ø–∞—Ä–Ω–∏–∫–æ–≤—ã—Ö –≥–∞–∑–æ–≤?*',
        'options': [
            '–°–µ–ª—å—Å–∫–æ–µ —Ö–æ–∑—è–π—Å—Ç–≤–æ',
            '–≠–Ω–µ—Ä–≥–µ—Ç–∏–∫–∞',
            '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç',
            '–ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ—Å—Ç—å'
        ],
        'explanation': '‚úÖ *–ü—Ä–∞–≤–∏–ª—å–Ω–æ!* –≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–π —Å–µ–∫—Ç–æ—Ä (–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ —ç–ª–µ–∫—Ç—Ä–æ—ç–Ω–µ—Ä–≥–∏–∏ –∏ —Ç–µ–ø–ª–∞) - –∫—Ä—É–ø–Ω–µ–π—à–∏–π –∏—Å—Ç–æ—á–Ω–∏–∫ –≤—ã–±—Ä–æ—Å–æ–≤.'
    },
    {
        'question': 'üåä *–ß—Ç–æ –≤—ã–∑—ã–≤–∞–µ—Ç –ø–æ–≤—ã—à–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è –º–æ—Ä—è?*',
        'options': [
            '–¢–æ–ª—å–∫–æ —Ç–∞—è–Ω–∏–µ –ª–µ–¥–Ω–∏–∫–æ–≤',
            '–¢–æ–ª—å–∫–æ —Ç–µ–ø–ª–æ–≤–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –≤–æ–¥—ã',
            '–¢–∞—è–Ω–∏–µ –ª–µ–¥–Ω–∏–∫–æ–≤ –∏ —Ç–µ–ø–ª–æ–≤–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –≤–æ–¥—ã',
            '–ò–∑–º–µ–Ω–µ–Ω–∏–µ –æ–∫–µ–∞–Ω—Å–∫–∏—Ö —Ç–µ—á–µ–Ω–∏–π'
        ],
        'explanation': '‚úÖ *–í–µ—Ä–Ω–æ!* –ü–æ–≤—ã—à–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è –º–æ—Ä—è –≤—ã–∑–≤–∞–Ω–æ –∫–∞–∫ —Ç–∞—è–Ω–∏–µ–º –ª–µ–¥–Ω–∏–∫–æ–≤, —Ç–∞–∫ –∏ —Ç–µ–ø–ª–æ–≤—ã–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º –≤–æ–¥—ã –ø—Ä–∏ –Ω–∞–≥—Ä–µ–≤–∞–Ω–∏–∏.'
    },
    {
        'question': 'üå≥ *–ö–∞–∫ –ª–µ—Å–∞ –≤–ª–∏—è—é—Ç –Ω–∞ –∫–ª–∏–º–∞—Ç?*',
        'options': [
            '–£—Å–∏–ª–∏–≤–∞—é—Ç –ø–æ—Ç–µ–ø–ª–µ–Ω–∏–µ',
            '–ü–æ–≥–ª–æ—â–∞—é—Ç CO‚ÇÇ –∏–∑ –∞—Ç–º–æ—Å—Ñ–µ—Ä—ã',
            '–í—ã–¥–µ–ª—è—é—Ç –ø–∞—Ä–Ω–∏–∫–æ–≤—ã–µ –≥–∞–∑—ã',
            '–ù–µ –≤–ª–∏—è—é—Ç –Ω–∞ –∫–ª–∏–º–∞—Ç'
        ],
        'explanation': '‚úÖ *–ü—Ä–∞–≤–∏–ª—å–Ω–æ!* –õ–µ—Å–∞ –¥–µ–π—Å—Ç–≤—É—é—Ç –∫–∞–∫ —É–≥–ª–µ—Ä–æ–¥–Ω—ã–µ sinks, –ø–æ–≥–ª–æ—â–∞—è CO‚ÇÇ –∏–∑ –∞—Ç–º–æ—Å—Ñ–µ—Ä—ã —á–µ—Ä–µ–∑ —Ñ–æ—Ç–æ—Å–∏–Ω—Ç–µ–∑.'
    },
    {
        'question': 'üî• *–ß—Ç–æ —Ç–∞–∫–æ–µ –ø–∞—Ä–Ω–∏–∫–æ–≤—ã–π —ç—Ñ—Ñ–µ–∫—Ç?*',
        'options': [
            '–û—Ö–ª–∞–∂–¥–µ–Ω–∏–µ –∞—Ç–º–æ—Å—Ñ–µ—Ä—ã',
            '–£–¥–µ—Ä–∂–∞–Ω–∏–µ —Ç–µ–ø–ª–∞ –≤ –∞—Ç–º–æ—Å—Ñ–µ—Ä—ã',
            '–£–≤–µ–ª–∏—á–µ–Ω–∏–µ –∫–∏—Å–ª–æ—Ä–æ–¥–∞',
            '–£–º–µ–Ω—å—à–µ–Ω–∏–µ –æ–±–ª–∞—á–Ω–æ—Å—Ç–∏'
        ],
        'explanation': '‚úÖ *–í–µ—Ä–Ω–æ!* –ü–∞—Ä–Ω–∏–∫–æ–≤—ã–π —ç—Ñ—Ñ–µ–∫—Ç - —ç—Ç–æ —É–¥–µ—Ä–∂–∞–Ω–∏–µ —Ç–µ–ø–ª–∞ –≤ –∞—Ç–º–æ—Å—Ñ–µ—Ä–µ –ó–µ–º–ª–∏ –ø–∞—Ä–Ω–∏–∫–æ–≤—ã–º–∏ –≥–∞–∑–∞–º–∏.'
    },
    {
        'question': 'üå™Ô∏è *–ö–∞–∫–æ–µ –∏–∑ —ç—Ç–∏—Ö —è–≤–ª–µ–Ω–∏–π –£–ß–ê–©–ê–ï–¢–°–Ø –∏–∑-–∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–ª–∏–º–∞—Ç–∞?*',
        'options': [
            '–ó–∏–º–Ω–∏–µ –º–æ—Ä–æ–∑—ã',
            '–≠–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã–µ –∑–∞—Å—É—Ö–∏',
            '–í—É–ª–∫–∞–Ω–∏—á–µ—Å–∫–∏–µ –∏–∑–≤–µ—Ä–∂–µ–Ω–∏—è',
            '–ó–µ–º–ª–µ—Ç—Ä—è—Å–µ–Ω–∏—è'
        ],
        'explanation': '‚úÖ *–ü—Ä–∞–≤–∏–ª—å–Ω–æ!* –≠–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã–µ –∑–∞—Å—É—Ö–∏ –∏ –≤–æ–ª–Ω—ã –∂–∞—Ä—ã —É—á–∞—â–∞—é—Ç—Å—è –∏–∑-–∑–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –ø–æ—Ç–µ–ø–ª–µ–Ω–∏—è.'
    },
    {
        'question': 'üêã *–ö–∞–∫ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∫–ª–∏–º–∞—Ç–∞ –≤–ª–∏—è–µ—Ç –Ω–∞ –æ–∫–µ–∞–Ω—ã?*',
        'options': [
            '–ü–æ–≤—ã—à–µ–Ω–∏–µ –∫–∏—Å–ª–æ—Ç–Ω–æ—Å—Ç–∏',
            '–ü–æ–Ω–∏–∂–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è',
            '–£–≤–µ–ª–∏—á–µ–Ω–∏–µ —Å–æ–ª–µ–Ω–æ—Å—Ç–∏',
            '–£–º–µ–Ω—å—à–µ–Ω–∏–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã'
        ],
        'explanation': '‚úÖ *–í–µ—Ä–Ω–æ!* –û–∫–µ–∞–Ω—ã –ø–æ–≥–ª–æ—â–∞—é—Ç CO‚ÇÇ, —á—Ç–æ –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ –∏—Ö –ø–æ–¥–∫–∏—Å–ª–µ–Ω–∏—é, –≤—Ä–µ–¥–Ω–æ–º—É –¥–ª—è –º–æ—Ä—Å–∫–æ–π –∂–∏–∑–Ω–∏.'
    },
    {
        'question': 'üåç *–ß—Ç–æ —Ç–∞–∫–æ–µ –ü–∞—Ä–∏–∂—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ?*',
        'options': [
            '–¢–æ—Ä–≥–æ–≤—ã–π –¥–æ–≥–æ–≤–æ—Ä',
            '–°–æ–≥–ª–∞—à–µ–Ω–∏–µ –æ –∑–∞—â–∏—Ç–µ –∫–ª–∏–º–∞—Ç–∞',
            '–í–æ–µ–Ω–Ω—ã–π –∞–ª—å—è–Ω—Å',
            '–ö—É–ª—å—Ç—É—Ä–Ω—ã–π –æ–±–º–µ–Ω'
        ],
        'explanation': '‚úÖ *–ü—Ä–∞–≤–∏–ª—å–Ω–æ!* –ü–∞—Ä–∏–∂—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ - –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π –¥–æ–≥–æ–≤–æ—Ä –ø–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—é –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –ø–æ—Ç–µ–ø–ª–µ–Ω–∏—è.'
    },
    {
        'question': 'üí® *–ö–∞–∫–æ–π –≥–∞–∑ —è–≤–ª—è–µ—Ç—Å—è –æ—Å–Ω–æ–≤–Ω—ã–º –ø–∞—Ä–Ω–∏–∫–æ–≤—ã–º –≥–∞–∑–æ–º?*',
        'options': [
            '–ö–∏—Å–ª–æ—Ä–æ–¥ (O‚ÇÇ)',
            '–ê–∑–æ—Ç (N‚ÇÇ)',
            '–£–≥–ª–µ–∫–∏—Å–ª—ã–π –≥–∞–∑ (CO‚ÇÇ)',
            '–í–æ–¥–æ—Ä–æ–¥ (H‚ÇÇ)'
        ],
        'explanation': '‚úÖ *–í–µ—Ä–Ω–æ!* CO‚ÇÇ - –æ—Å–Ω–æ–≤–Ω–æ–π –ø–∞—Ä–Ω–∏–∫–æ–≤—ã–π –≥–∞–∑, contributing –æ–∫–æ–ª–æ 76% –∫ –ø–∞—Ä–Ω–∏–∫–æ–≤–æ–º—É —ç—Ñ—Ñ–µ–∫—Ç—É.'
    },
    {
        'question': 'üîÑ *–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç "—É–≥–ª–µ—Ä–æ–¥–Ω—ã–π –Ω–µ–π—Ç—Ä–∞–ª–∏—Ç–µ—Ç"?*',
        'options': [
            '–ü–æ–ª–Ω–æ–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –≤—ã–±—Ä–æ—Å–æ–≤',
            '–ë–∞–ª–∞–Ω—Å –≤—ã–±—Ä–æ—Å–æ–≤ –∏ –ø–æ–≥–ª–æ—â–µ–Ω–∏—è CO‚ÇÇ',
            '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ç–æ–ª—å–∫–æ —É–≥–ª—è',
            '–ó–∞–ø—Ä–µ—Ç –Ω–∞ –≤—Å–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞'
        ],
        'explanation': '‚úÖ *–ü—Ä–∞–≤–∏–ª—å–Ω–æ!* –£–≥–ª–µ—Ä–æ–¥–Ω—ã–π –Ω–µ–π—Ç—Ä–∞–ª–∏—Ç–µ—Ç - –±–∞–ª–∞–Ω—Å –º–µ–∂–¥—É –≤—ã–±—Ä–æ—Å–∞–º–∏ —É–≥–ª–µ—Ä–æ–¥–∞ –∏ –µ–≥–æ –ø–æ–≥–ª–æ—â–µ–Ω–∏–µ–º –∏–∑ –∞—Ç–º–æ—Å—Ñ–µ—Ä—ã.'
    }
]


user_stats = load_user_stats()

climate_facts = [
    "üåç *–§–∞–∫—Ç:* –ü–æ—Å–ª–µ–¥–Ω–µ–µ –¥–µ—Å—è—Ç–∏–ª–µ—Ç–∏–µ (2011-2020) –±—ã–ª–æ —Å–∞–º—ã–º —Ç–µ–ø–ª—ã–º –≤ –∏—Å—Ç–æ—Ä–∏–∏ –Ω–∞–±–ª—é–¥–µ–Ω–∏–π!",
    "üî• *–§–∞–∫—Ç:* –ö–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è CO‚ÇÇ –≤ –∞—Ç–º–æ—Å—Ñ–µ—Ä–µ —Å–∞–º–∞—è –≤—ã—Å–æ–∫–∞—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 –º–∏–ª–ª–∏–æ–Ω–∞ –ª–µ—Ç!",
    "üå™Ô∏è *–§–∞–∫—Ç:* –≠–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã–µ –ø–æ–≥–æ–¥–Ω—ã–µ —è–≤–ª–µ–Ω–∏—è —É—á–∞—Å—Ç–∏–ª–∏—Å—å –Ω–∞ 50% –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 20 –ª–µ—Ç!",
    "üêº *–§–∞–∫—Ç:* 1 –º–∏–ª–ª–∏–æ–Ω –≤–∏–¥–æ–≤ –∂–∏–≤–æ—Ç–Ω—ã—Ö –∏ —Ä–∞—Å—Ç–µ–Ω–∏–π –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ–¥ —É–≥—Ä–æ–∑–æ–π –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è –∏–∑-–∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–ª–∏–º–∞—Ç–∞!",
    "üåä *–§–∞–∫—Ç:* –£—Ä–æ–≤–µ–Ω—å –º–æ—Ä—è –ø–æ–¥–Ω–∏–º–∞–µ—Ç—Å—è –Ω–∞ 3.6 –º–º –≤ –≥–æ–¥ - —ç—Ç–æ –≤ 2.5 —Ä–∞–∑–∞ –±—ã—Å—Ç—Ä–µ–µ, —á–µ–º –≤ 20 –≤–µ–∫–µ!"
]

eco_tips = [
    "üí° *–°–æ–≤–µ—Ç:* –ó–∞–º–µ–Ω–∏—Ç–µ –ª–∞–º–ø—ã –Ω–∞–∫–∞–ª–∏–≤–∞–Ω–∏—è –Ω–∞ —Å–≤–µ—Ç–æ–¥–∏–æ–¥–Ω—ã–µ - —ç–∫–æ–Ω–æ–º–∏—è –¥–æ 80% —ç–Ω–µ—Ä–≥–∏–∏!",
    "üö≤ *–°–æ–≤–µ—Ç:* –ü—Ä–æ–µ–∑–∂–∞—è 10 –∫–º –Ω–∞ –≤–µ–ª–æ—Å–∏–ø–µ–¥–µ –≤–º–µ—Å—Ç–æ –º–∞—à–∏–Ω—ã, –≤—ã –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç–µ –≤—ã–±—Ä–æ—Å 2 –∫–≥ CO‚ÇÇ!",
    "ü•¶ *–°–æ–≤–µ—Ç:* –û–¥–∏–Ω –¥–µ–Ω—å –±–µ–∑ –º—è—Å–∞ –≤ –Ω–µ–¥–µ–ª—é = —ç–∫–æ–Ω–æ–º–∏—è 700 –∫–≥ CO‚ÇÇ –≤ –≥–æ–¥ –Ω–∞ —á–µ–ª–æ–≤–µ–∫–∞!",
    "üö∞ *–°–æ–≤–µ—Ç:* –í—ã–∫–ª—é—á–∞–π—Ç–µ –≤–æ–¥—É –ø—Ä–∏ —á–∏—Å—Ç–∫–µ –∑—É–±–æ–≤ - —ç–∫–æ–Ω–æ–º–∏—è 10 –ª–∏—Ç—Ä–æ–≤ –≤–æ–¥—ã –≤ –º–∏–Ω—É—Ç—É!",
    "üõçÔ∏è *–°–æ–≤–µ—Ç:* –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–Ω–æ–≥–æ—Ä–∞–∑–æ–≤—É—é —Å—É–º–∫—É –≤–º–µ—Å—Ç–æ –ø–ª–∞—Å—Ç–∏–∫–æ–≤—ã—Ö –ø–∞–∫–µ—Ç–æ–≤ - –∫–∞–∂–¥—ã–π –ø–∞–∫–µ—Ç —Ä–∞–∑–ª–∞–≥–∞–µ—Ç—Å—è 400 –ª–µ—Ç!"
]

@bot.message_handler(commands=['start'])
def send_welcome(message):
    user_id = str(message.from_user.id)
    if user_id not in user_stats:
        user_stats[user_id] = {
            'quizzes_taken': 0,
            'level': '–ù–æ–≤–∏—á–æ–∫'
        }
    
    save_user_stats()
    
    markup = types.InlineKeyboardMarkup(row_width=2)
    buttons = [
        types.InlineKeyboardButton("‚ùì –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", callback_data='info'),
        types.InlineKeyboardButton("üîç –ü—Ä–∏—á–∏–Ω—ã", callback_data='causes'),
        types.InlineKeyboardButton("‚ö†Ô∏è –ü–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è", callback_data='effects'),
        types.InlineKeyboardButton("üí° –†–µ—à–µ–Ω–∏—è", callback_data='solutions'),
        types.InlineKeyboardButton("üå± –°–æ–≤–µ—Ç—ã", callback_data='tips'),
        types.InlineKeyboardButton("üéØ –ö–≤–∏–∑", callback_data='quiz'),
        types.InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data='stats'),
        types.InlineKeyboardButton("üåç –§–∞–∫—Ç", callback_data='fact')
    ]
    markup.add(*buttons)
    
    welcome_text = f"""
üåç *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ClimateBot, {message.from_user.first_name}!* üåç

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ üëá
    """
    bot.send_message(message.chat.id, welcome_text, parse_mode='Markdown', reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data in ['info', 'causes', 'effects', 'solutions', 'tips', 'quiz', 'stats', 'fact', 'back_to_main'])
def handle_main_callbacks(call):
    try:
        if call.data == 'info':
            send_info(call.message)
        elif call.data == 'causes':
            send_causes(call.message)
        elif call.data == 'effects':
            send_effects(call.message)
        elif call.data == 'solutions':
            send_solutions(call.message)
        elif call.data == 'tips':
            send_random_tip(call.message)
        elif call.data == 'quiz':
            start_quiz(call.message)
        elif call.data == 'stats':
            show_stats(call.message)
        elif call.data == 'fact':
            send_random_fact(call.message)
        elif call.data == 'back_to_main':
            send_welcome(call.message)
        
        bot.answer_callback_query(call.id)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ callback: {e}")
        try:
            bot.answer_callback_query(call.id)
        except:
            pass

@bot.callback_query_handler(func=lambda call: call.data.startswith('answer_'))
def handle_quiz_answer(call):
    try:
        user_id = str(call.from_user.id)
        if user_id not in user_stats or 'current_question' not in user_stats[user_id]:
            bot.answer_callback_query(call.id, "–ù–∞—á–Ω–∏—Ç–µ –Ω–æ–≤—ã–π –∫–≤–∏–∑! /quiz")
            return
            
        current_q = user_stats[user_id]['current_question']
        

        if current_q >= len(quiz_questions):
            bot.answer_callback_query(call.id, "–ö–≤–∏–∑ —É–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω! –ù–∞—á–Ω–∏—Ç–µ –Ω–æ–≤—ã–π.")
            return
            
        question_data = quiz_questions[current_q]
        explanation = question_data['explanation']
        
        bot.send_message(call.message.chat.id, explanation, parse_mode='Markdown')
        

        user_stats[user_id]['current_question'] += 1
        
        save_user_stats()
        
        time.sleep(1)
        

        if user_stats[user_id]['current_question'] < len(quiz_questions):
            ask_question(call.message)
        else:
            finish_quiz(call.message)
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ—Ç–≤–µ—Ç–∞: {e}")
        try:
            bot.answer_callback_query(call.id)
        except:
            pass

@bot.message_handler(commands=['info'])
def send_info(message):
    info_text = """
*‚ùì –ß—Ç–æ —Ç–∞–∫–æ–µ –≥–ª–æ–±–∞–ª—å–Ω–æ–µ –ø–æ—Ç–µ–ø–ª–µ–Ω–∏–µ?*

–ì–ª–æ–±–∞–ª—å–Ω–æ–µ –ø–æ—Ç–µ–ø–ª–µ–Ω–∏–µ ‚Äî —ç—Ç–æ –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω–æ–µ –ø–æ–≤—ã—à–µ–Ω–∏–µ *—Å—Ä–µ–¥–Ω–µ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –∫–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Å–∏—Å—Ç–µ–º—ã –ó–µ–º–ª–∏*, –Ω–∞–±–ª—é–¥–∞–µ–º–æ–µ —É–∂–µ –±–æ–ª–µ–µ –≤–µ–∫–∞.

üìä *–ö–ª—é—á–µ–≤—ã–µ —Ñ–∞–∫—Ç—ã:*
‚Ä¢ +1.1¬∞C - –ø–æ–≤—ã—à–µ–Ω–∏–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã —Å –¥–æ–∏–Ω–¥—É—Å—Ç—Ä–∏–∞–ª—å–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è
‚Ä¢ 2011-2020 - —Å–∞–º–æ–µ —Ç–µ–ø–ª–æ–µ –¥–µ—Å—è—Ç–∏–ª–µ—Ç–∏–µ –≤ –∏—Å—Ç–æ—Ä–∏–∏
‚Ä¢ 4 - –∫–∞–∂–¥–æ–µ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –¥–µ—Å—è—Ç–∏–ª–µ—Ç–∏–µ –±—ã–ª–æ —Ç–µ–ø–ª–µ–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ

üå°Ô∏è *–≠—Ç–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∞–Ω—Ç—Ä–æ–ø–æ–≥–µ–Ω–Ω–æ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–ª–∏–º–∞—Ç–∞*, –≤—ã–∑–≤–∞–Ω–Ω–æ–≥–æ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é —á–µ–ª–æ–≤–µ–∫–∞.
    """
    bot.send_message(message.chat.id, info_text, parse_mode='Markdown')

@bot.message_handler(commands=['causes'])
def send_causes(message):
    causes_text = """
*üîç –û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –ø–æ—Ç–µ–ø–ª–µ–Ω–∏—è:*

1. *–≠–Ω–µ—Ä–≥–µ—Ç–∏–∫–∞* (75% –≤—ã–±—Ä–æ—Å–æ–≤) 
   ‚Ä¢ –°–∂–∏–≥–∞–Ω–∏–µ —É–≥–ª—è, –Ω–µ—Ñ—Ç–∏, –≥–∞–∑–∞
   ‚Ä¢ –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ —ç–ª–µ–∫—Ç—Ä–æ—ç–Ω–µ—Ä–≥–∏–∏

2. *–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç* (15% –≤—ã–±—Ä–æ—Å–æ–≤)
   ‚Ä¢ –ê–≤—Ç–æ–º–æ–±–∏–ª–∏, —Å–∞–º–æ–ª–µ—Ç—ã, –∫–æ—Ä–∞–±–ª–∏
   ‚Ä¢ –î–∏–∑–µ–ª—å–Ω–æ–µ –∏ –±–µ–Ω–∑–∏–Ω–æ–≤–æ–µ —Ç–æ–ø–ª–∏–≤–æ

3. *–°–µ–ª—å—Å–∫–æ–µ —Ö–æ–∑—è–π—Å—Ç–≤–æ* (10% –≤—ã–±—Ä–æ—Å–æ–≤)
   ‚Ä¢ –ú–µ—Ç–∞–Ω –æ—Ç –∂–∏–≤–æ—Ç–Ω–æ–≤–æ–¥—Å—Ç–≤–∞
   ‚Ä¢ –£–¥–æ–±—Ä–µ–Ω–∏—è —Å –∑–∞–∫–∏—Å—å—é –∞–∑–æ—Ç–∞

4. *–ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ—Å—Ç—å* 
   ‚Ä¢ –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ —Ü–µ–º–µ–Ω—Ç–∞, —Å—Ç–∞–ª–∏
   ‚Ä¢ –•–∏–º–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã

5. *–í—ã—Ä—É–±–∫–∞ –ª–µ—Å–æ–≤*
   ‚Ä¢ –ü–æ—Ç–µ—Ä—è 12 –º–ª–Ω –≥–µ–∫—Ç–∞—Ä–æ–≤ –ª–µ—Å–∞ –µ–∂–µ–≥–æ–¥–Ω–æ
   ‚Ä¢ –°–Ω–∏–∂–µ–Ω–∏–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –ø–æ–≥–ª–æ—â–∞—Ç—å CO‚ÇÇ
    """
    bot.send_message(message.chat.id, causes_text, parse_mode='Markdown')

@bot.message_handler(commands=['effects'])
def send_effects(message):
    effects_text = """
*‚ö†Ô∏è –ü–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –ø–æ—Ç–µ–ø–ª–µ–Ω–∏—è:*

üå™Ô∏è *–≠–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã–µ —è–≤–ª–µ–Ω–∏—è:*
‚Ä¢ –£—á–∞—â–µ–Ω–∏–µ –≤–æ–ª–Ω –∂–∞—Ä—ã –∏ –∑–∞—Å—É—Ö
‚Ä¢ –£—Å–∏–ª–µ–Ω–∏–µ —É—Ä–∞–≥–∞–Ω–æ–≤ –∏ –Ω–∞–≤–æ–¥–Ω–µ–Ω–∏–π
‚Ä¢ –ù–µ–ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã–µ –ø–æ–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è

üåä *–ü–æ–≤—ã—à–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è –º–æ—Ä—è:*
‚Ä¢ +3.6 –º–º –≤ –≥–æ–¥ - —Ç–µ–∫—É—â–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å
‚Ä¢ –£–≥—Ä–æ–∑–∞ –ø—Ä–∏–±—Ä–µ–∂–Ω—ã–º –≥–æ—Ä–æ–¥–∞–º
‚Ä¢ –ó–∞—Ç–æ–ø–ª–µ–Ω–∏–µ –æ—Å—Ç—Ä–æ–≤–Ω—ã—Ö –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤

üêº *–í–æ–∑–¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞ –ø—Ä–∏—Ä–æ–¥—É:*
‚Ä¢ –ò—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏–µ 1 –º–ª–Ω –≤–∏–¥–æ–≤
‚Ä¢ –ü–æ–¥–∫–∏—Å–ª–µ–Ω–∏–µ –æ–∫–µ–∞–Ω–æ–≤
‚Ä¢ –¢–∞—è–Ω–∏–µ –≤–µ—á–Ω–æ–π –º–µ—Ä–∑–ª–æ—Ç—ã

üë• *–í–ª–∏—è–Ω–∏–µ –Ω–∞ –ª—é–¥–µ–π:*
‚Ä¢ –†–∏—Å–∫ –¥–ª—è –ø—Ä–æ–¥–æ–≤–æ–ª—å—Å—Ç–≤–µ–Ω–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
‚Ä¢ –£—Ö—É–¥—à–µ–Ω–∏–µ –∑–¥–æ—Ä–æ–≤—å—è –Ω–∞—Å–µ–ª–µ–Ω–∏—è
‚Ä¢ –í—ã–Ω—É–∂–¥–µ–Ω–Ω–∞—è –º–∏–≥—Ä–∞—Ü–∏—è –º–∏–ª–ª–∏–æ–Ω–æ–≤
    """
    bot.send_message(message.chat.id, effects_text, parse_mode='Markdown')

@bot.message_handler(commands=['solutions'])
def send_solutions(message):
    solutions_text = """
*üí° –†–µ—à–µ–Ω–∏—è –¥–ª—è –±–æ—Ä—å–±—ã —Å –∏–∑–º–µ–Ω–µ–Ω–∏–µ–º –∫–ª–∏–º–∞—Ç–∞:*

üåû *–≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ—Ö–æ–¥:*
‚Ä¢ –°–æ–ª–Ω–µ—á–Ω–∞—è –∏ –≤–µ—Ç—Ä–æ–≤–∞—è —ç–Ω–µ—Ä–≥–∏—è
‚Ä¢ –≠–ª–µ–∫—Ç—Ä–æ–º–æ–±–∏–ª–∏ –∏ –í–ò–≠
‚Ä¢ –≠–Ω–µ—Ä–≥–æ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏

üå≥ *–ü—Ä–∏—Ä–æ–¥–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:*
‚Ä¢ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ª–µ—Å–æ–≤
‚Ä¢ –ó–∞—â–∏—Ç–∞ —ç–∫–æ—Å–∏—Å—Ç–µ–º
‚Ä¢ –£—Å—Ç–æ–π—á–∏–≤–æ–µ —Å–µ–ª—å—Å–∫–æ–µ —Ö–æ–∑—è–π—Å—Ç–≤–æ

üè≠ *–ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω—ã–µ –∏–Ω–Ω–æ–≤–∞—Ü–∏–∏:*
‚Ä¢ –£–ª–∞–≤–ª–∏–≤–∞–Ω–∏–µ CO‚ÇÇ
‚Ä¢ –ó–µ–ª–µ–Ω–∞—è —Å—Ç–∞–ª—å –∏ —Ü–µ–º–µ–Ω—Ç
‚Ä¢ –¶–∏—Ä–∫—É–ª—è—Ä–Ω–∞—è —ç–∫–æ–Ω–æ–º–∏–∫–∞

ü§ù *–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–µ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ:*
‚Ä¢ –ü–∞—Ä–∏–∂—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ
‚Ä¢ –¶–µ–ª—å: –Ω—É–ª–µ–≤—ã–µ –≤—ã–±—Ä–æ—Å—ã –∫ 2050
‚Ä¢ –ì–ª–æ–±–∞–ª—å–Ω–æ–µ —Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏–µ

*–ö–∞–∂–¥—ã–π –º–æ–∂–µ—Ç –≤–Ω–µ—Å—Ç–∏ –≤–∫–ª–∞–¥!* üåç
    """
    bot.send_message(message.chat.id, solutions_text, parse_mode='Markdown')

@bot.message_handler(commands=['tips'])
def send_random_tip(message):
    tip = random.choice(eco_tips)
    bot.send_message(message.chat.id, tip, parse_mode='Markdown')

@bot.message_handler(commands=['fact'])
def send_random_fact(message):
    fact = random.choice(climate_facts)
    bot.send_message(message.chat.id, fact, parse_mode='Markdown')

@bot.message_handler(commands=['stats'])
def show_stats(message):
    user_id = str(message.from_user.id)
    if user_id in user_stats:
        stats = user_stats[user_id]
        
        stats_text = f"""
üìä *–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞, {message.from_user.first_name}:*

üìù –ü—Ä–æ–π–¥–µ–Ω–æ –∫–≤–∏–∑–æ–≤: {stats['quizzes_taken']}
üéØ –£—Ä–æ–≤–µ–Ω—å: {stats['level']}
        """
    else:
        stats_text = "üìä –í—ã –µ—â–µ –Ω–µ –Ω–∞—á–∞–ª–∏! –ù–∞–∂–º–∏—Ç–µ /start —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å."
    
    bot.send_message(message.chat.id, stats_text, parse_mode='Markdown')

@bot.message_handler(commands=['quiz'])
def start_quiz(message):
    user_id = str(message.from_user.id)
    if user_id not in user_stats:
        user_stats[user_id] = {
            'quizzes_taken': 0,
            'level': '–ù–æ–≤–∏—á–æ–∫'
        }
    
    user_stats[user_id]['current_question'] = 0
    user_stats[user_id]['quizzes_taken'] += 1
    
    save_user_stats()
    
    ask_question(message)

def ask_question(message):
    user_id = str(message.from_user.id)
    current_q = user_stats[user_id].get('current_question', 0)
    
    if current_q < len(quiz_questions):
        question_data = quiz_questions[current_q]
        
        markup = types.InlineKeyboardMarkup(row_width=2)
        buttons = []
        for i, option in enumerate(question_data['options']):
            buttons.append(types.InlineKeyboardButton(option, callback_data=f'answer_{i}'))
        markup.add(*buttons)
        
        if 'last_quiz_message_id' in user_stats[user_id]:
            try:
                bot.delete_message(message.chat.id, user_stats[user_id]['last_quiz_message_id'])
            except:
                pass
        
        sent_message = bot.send_message(message.chat.id, question_data['question'], parse_mode='Markdown', reply_markup=markup)
        user_stats[user_id]['last_quiz_message_id'] = sent_message.message_id
        
    else:
        finish_quiz(message)

def finish_quiz(message):
    user_id = str(message.from_user.id)
    
    result_text = f"""
üéâ *–ö–≤–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω!*

–í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –≤—Å–µ {len(quiz_questions)} –≤–æ–ø—Ä–æ—Å–æ–≤ –æ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∫–ª–∏–º–∞—Ç–∞!

–ù–∞–¥–µ–µ–º—Å—è, –≤—ã —É–∑–Ω–∞–ª–∏ —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ –æ –Ω–∞—à–µ–π –ø–ª–∞–Ω–µ—Ç–µ üåç
    """
    
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("üéØ –ï—â–µ –∫–≤–∏–∑", callback_data='quiz'))
    markup.add(types.InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data='stats'))
    
    bot.send_message(message.chat.id, result_text, parse_mode='Markdown', reply_markup=markup)

@bot.message_handler(func=lambda message: True)
def handle_message(message):
    text = message.text.lower()
    
    if text in ['–ø—Ä–∏–≤–µ—Ç', 'hello', 'hi', '–Ω–∞—á–∞—Ç—å']:
        bot.reply_to(message, f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! üåç –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –º–µ–Ω—é.")
    elif text in ['—Å–ø–∞—Å–∏–±–æ', '–±–ª–∞–≥–æ–¥–∞—Ä—é', 'thanks']:
        bot.reply_to(message, "–í—Å–µ–≥–¥–∞ —Ä–∞–¥ –ø–æ–º–æ—á—å! üå±")
    elif text in ['–ø–æ–º–æ—â—å', 'help', '–∫–æ–º–∞–Ω–¥—ã']:
        bot.reply_to(message, "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –∏–ª–∏:\n/info - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è\n/quiz - –∫–≤–∏–∑\n/tips - —Å–æ–≤–µ—Ç—ã\n/fact - —Ñ–∞–∫—Ç—ã\n/stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
    else:
        bot.reply_to(message, "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–æ–º–∞–Ω–¥.")

def check_internet_connection():
    try:
        requests.get('https://api.telegram.org', timeout=5)
        return True
    except:
        return False

if __name__ == '__main__':
    print("üåç ClimateBot –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    
    while True:
        try:
            if check_internet_connection():
                print("‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ. –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω!")
                bot.polling(none_stop=True, interval=1, timeout=60)
            else:
                print("‚ùå –ù–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è. –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —á–µ—Ä–µ–∑ 15 —Å–µ–∫—É–Ω–¥...")
                time.sleep(15)
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 15 —Å–µ–∫—É–Ω–¥...")
            time.sleep(15)
